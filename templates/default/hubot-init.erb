#!/bin/bash
# hubot
# chkconfig: 345 20 80
# description: hubot
# processname: hubot

DAEMON="/opt/hubot/bin/hubot"
DAEMON_ENV="source /opt/hubot/.env"
DAEMON_OPTS="--name <%= node['hubot']['name'] %> --adapter <%= node['hubot']['adapter'] %>"

NAME=hubot
USER=hubot
DESC="hubot"
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME
LOG_FILE=/var/log/$NAME.log

case "$1" in
start)
        STATUS=`$0 status`
        if [[ $STATUS == *Running ]]; then
          printf "%s\n" "Already Running..."
          exit 0
        fi
	printf "%-50s" "Starting $DESC..."
        runuser -l $USER -c "$DAEMON_ENV && cd /opt/hubot &&  $DAEMON $DAEMON_OPTS" >> $LOG_FILE 2>&1 &
        sleep 3
        PID=$(ps aux | grep node | head -1 | awk '{print $2}')
        if [ -z $PID ]; then
            printf "%s\n" "Fail"
        else
            echo $PID > $PIDFILE
            printf "%s\n" "Ok"
        fi
;;
status)
        printf "%-50s" "Checking $DESC..."
        if [ -f $PIDFILE ]; then
            PID=`cat $PIDFILE`
            if [ -z "`ps axf | grep ${PID} | grep -v grep`" ]; then
                printf "%s\n" "Process dead but pidfile exists"
            else
                echo "Running"
            fi
        else
            printf "%s\n" "Service not running"
        fi
;;
stop)
        printf "%-50s" "Stopping $DESC"
            PID=`cat $PIDFILE`
        if [ -f $PIDFILE ]; then
            kill $PID
            printf "%s\n" "Ok"
            rm -f $PIDFILE
        else
            printf "%s\n" "pidfile not found"
        fi
;;

restart)
  	$0 stop
  	$0 start
;;

*)
        echo "Usage: $0 {status|start|stop|restart}"
        exit 1
esac
